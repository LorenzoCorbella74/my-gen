---
author: Lorenzo Corbella
version: 1.0.0
description: Node.js TypeScript project with AI SDK v5 integration
tags: [nodejs, typescript, ai, google-gemini, ollama]
requires: [node>18, git, npm]
links: [
    https://sdk.vercel.ai/,
    https://ai.google.dev/,
    https://ollama.ai/
]
---

# Inizializzazione di progetti con AI SDK V5 con WIN

# Usage:
# gen --file=C:/GEN/node-ts-ai.gen
@log Progett0 con AI SDK
@set nomeProgetto=input: Nome del progetto?
@set author = LorenzoCorbella74
> md {nomeProgetto}
> cd {nomeProgetto}
> npm init -y
> echo "# {nomeProgetto}" > README.md

@log init Git
> git init
@fill .gitignore
"
node_modules
dist
.env
"

@log Istallazione dipendenze
> npm install ai @ai-sdk/google zod dotenv ollama-ai-provider-v2
> npm i -D typescript tsx @types/node

@log Creating files....
>md src
@fill src/index.ts
"
import { google } from '@ai-sdk/google';
import { ollama } from 'ollama-ai-provider-v2';
import { generateText } from 'ai';
import dotenv from 'dotenv';

dotenv.config()

const { text, usage } = await generateText({
  model: google('gemini-2.5-flash'), // ollama('llama3.2-latest')
  prompt: 'Write a vegetarian lasagna recipe for 4 people.',
});
console.log(text, usage);
"

@fill tsconfig.json
"
{
  "compilerOptions": {
    "module": "nodenext",
    "target": "esnext",
    "outDir": "./dist",
    "rootDir": "./src",
    "strict": true,
    "esModuleInterop": true,
    "skipLibCheck": true,
    "forceConsistentCasingInFileNames": true,
    "resolveJsonModule": true,
    // Other Outputs
    "sourceMap": true,
    "declaration": true,
    "declarationMap": true,
    // Stricter Typechecking Options
    "noUncheckedIndexedAccess": true,
    "exactOptionalPropertyTypes": true
  },
  "include": ["src/**/*"],
  "exclude": ["node_modules", "dist"]
}
"

@log Scaffolding files...
> echo GOOGLE_GENERATIVE_AI_API_KEY=your_api_key > .env

@fill .vscode/launch.json
"
{
"version": "0.2.0",
    "configurations": [
        {
            "type": "node",
            "request": "launch",
            "name": "Debug REAST API",
            "program": "${workspaceFolder}/src/index.ts",
            "args": [],
            "console": "integratedTerminal",
            "runtimeExecutable": "tsx"
        }
    ]
}
"

@log Setting scripts in package.json....
> npm pkg set name="{nomeProgetto}"
> npm pkg set type="module"
> npm pkg set version="0.0.1" 
> npm pkg set author="{author}" 
> npm pkg set main="src/index.js" 
> npm pkg set scripts.dev="tsx --env-file=.env --watch src/index.ts"
> npm pkg set scripts.build="tsc -p tsconfig.json"

@log First commit
> git add --all
> git commit -m "First commit"

@log Start coding...
> code .




