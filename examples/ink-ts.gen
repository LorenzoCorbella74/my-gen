# Simple Typescript project for CLI with INK V. 0.0.1
# https://github.com/vadimdemedes/ink
# https://azukiazusa.dev/blog/ink-cli-app/
# 
@log Creating Ink + Typescript template!
@set nomeProgetto= input: Nome del progetto?
@set author = Lorenzo Corbella

> npm init -y
> echo "# {nomeProgetto}" > README.md

@log Git init...
> git init
> git branch -m master main
@fill .gitignore
"
node_modules
dist
.env
"

@log Setting env
@fill .env
"
key=value
"

@log Getting dependencies...
> npm install ink react ink-gradient ink-big-text ink-spinner
> npm install --save-dev typescript @types/react tsx @types/node

@log Creating files....
>md src
@fill src/cli.ts
"
import React, { useEffect, useState } from "react";
import { render, Text } from "ink";
import BigText from "ink-big-text";
import Gradient from "ink-gradient";
 
const App = () => {
  const [time, setTime] = useState(new Date());
 
  useEffect(() => {
    const interval = setInterval(() => {
      setTime(new Date());
    }, 1000);
    return () => clearInterval(interval);
  }, []);
 
  return  (
    <>
    <Gradient name="summer">
        <BigText text="My App" align='left' font='chrome'/> 
    </Gradient>
    <Text color="green">{time.toLocaleTimeString()}</Text>
    </>
  );
};
render(<App />);
"

@fill tsconfig.json
"
{
  "compilerOptions": {
    "module": "nodenext",
    "target": "esnext",
    "outDir": "./dist",
    "rootDir": "./src",
    "strict": true,
    "esModuleInterop": true,
    "skipLibCheck": true,
    "forceConsistentCasingInFileNames": true,
    "resolveJsonModule": true,
    // Other Outputs
    "sourceMap": true,
    "declaration": true,
    "declarationMap": true,
    // Stricter Typechecking Options
    "noUncheckedIndexedAccess": true,
    "exactOptionalPropertyTypes": true,
    "jsx": "react-jsx"
  },
  "include": ["src/**/*"],
  "exclude": ["node_modules", "dist"]
}
"

@fill .vscode/launch.json
"
{
"version": "0.2.0",
    "configurations": [
        {
            "type": "node",
            "request": "launch",
            "name": "Debug REAST API",
            "program": "${workspaceFolder}/src/cli.ts",
            "args": [],
            "console": "integratedTerminal",
            "runtimeExecutable": "tsx"
        }
    ]
}
"

@log Setting scripts in package.json....
> npm pkg set version="0.0.1" 
> npm pkg set author="{author}" 
> npm pkg set type="module" 
> npm pkg set main="src/cli.js" 
> npm pkg set scripts.dev="tsx --watch src/cli.tsx"
> npm pkg set scripts.build="tsc src/cli.tsx -p tsconfig.json"
> npm pkg set scripts.start="node dist/cli.js"

@log Start coding...
> code .